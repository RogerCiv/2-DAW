/**
 * AEMET OpenData
 * AEMET OpenData es una API REST desarrollado por AEMET que permite la difusión y la reutilización de la información meteorológica y climatológica de la Agencia, en el sentido indicado en la Ley 18/2015, de 9 de julio, por la que se modifica la Ley 37/2007, de 16 de noviembre, sobre reutilización de la información del sector público. (IMPORTANTE: Para poder realizar peticiones, es necesario introducir en API Key haciendo clic en el círculo rojo de recurso REST).
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Model200', 'model/Model401', 'model/Model404', 'model/Model429'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Model200'), require('../model/Model401'), require('../model/Model404'), require('../model/Model429'));
  } else {
    // Browser globals (root is window)
    if (!root.AemetOpenData) {
      root.AemetOpenData = {};
    }
    root.AemetOpenData.PrediccionesNormalizadasTextoApi = factory(root.AemetOpenData.ApiClient, root.AemetOpenData.Model200, root.AemetOpenData.Model401, root.AemetOpenData.Model404, root.AemetOpenData.Model429);
  }
}(this, function(ApiClient, Model200, Model401, Model404, Model429) {
  'use strict';

  /**
   * PrediccionesNormalizadasTexto service.
   * @module api/PrediccionesNormalizadasTextoApi
   * @version 2.0
   */

  /**
   * Constructs a new PrediccionesNormalizadasTextoApi. 
   * @alias module:api/PrediccionesNormalizadasTextoApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the prediccinCCAAHoyArchivo_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinCCAAHoyArchivo_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción CCAA hoy. Archivo.
     * Predicción para la comunidad autónoma que se pasa como parámetro (ccaa) con validez para el día de fecha de elaboración que se pasa como parámetro (fecha). Periodicidad de actualización: continuamente.
     * @param {String} ccaa  | Código de CCAA | CCAA | |----------|----------| | and  | Andalucía   | | arn  | Aragón   | | ast  | Astrrias  | | bal  | Ballears, Illes   | | coo  | Canarias   | | can  | Cantabria   | | cle  | Castilla y León   | | clm  | Castilla - La Mancha   | | cat  | Cataluña   | | val  | Comunitat Valenciana   | | ext  | Extremadura   | | gal  | Galicia   | | mad  | Madrid, Comunidad de    | | mur  | Murcia, Región de   | | nav  | Navarra, Comunidad Foral de   | | pva  | País Vasco | | rio  | Rioja, La   
     * @param {String} fecha Día de elaboración (AAAA-MM-DD)
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinCCAAHoyArchivo_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinCCAAHoyArchivo_ = function(ccaa, fecha, callback) {
      var postBody = null;

      // verify the required parameter 'ccaa' is set
      if (ccaa === undefined || ccaa === null) {
        throw new Error("Missing the required parameter 'ccaa' when calling prediccinCCAAHoyArchivo_");
      }

      // verify the required parameter 'fecha' is set
      if (fecha === undefined || fecha === null) {
        throw new Error("Missing the required parameter 'fecha' when calling prediccinCCAAHoyArchivo_");
      }


      var pathParams = {
        'ccaa': ccaa,
        'fecha': fecha
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/ccaa/hoy/{ccaa}/elaboracion/{fecha}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinCCAAHoyTiempoActual_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinCCAAHoyTiempoActual_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción CCAA hoy. Tiempo actual.
     * Predicción para la CCAA que se pasa como parámetro con validez para mismo día que la fecha de petición. En el caso de que en la fecha de petición este producto todavía no se hubiera elaborado, se retornará el último elaborado. Actualización continuamente.
     * @param {String} ccaa  | Código de CCAA | CCAA | |----------|----------| | and  | Andalucía   | | arn  | Aragón   | | ast  | Asturias  | | bal  | Ballears, Illes   | | coo  | Canarias   | | can  | Cantabria   | | cle  | Castilla y León   | | clm  | Castilla - La Mancha   | | cat  | Cataluña   | | val  | Comunitat Valenciana   | | ext  | Extremadura   | | gal  | Galicia   | | mad  | Madrid, Comunidad de    | | mur  | Murcia, Región de   | | nav  | Navarra, Comunidad Foral de   | | pva  | País Vasco | | rio  | Rioja, La
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinCCAAHoyTiempoActual_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinCCAAHoyTiempoActual_ = function(ccaa, callback) {
      var postBody = null;

      // verify the required parameter 'ccaa' is set
      if (ccaa === undefined || ccaa === null) {
        throw new Error("Missing the required parameter 'ccaa' when calling prediccinCCAAHoyTiempoActual_");
      }


      var pathParams = {
        'ccaa': ccaa
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/ccaa/hoy/{ccaa}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinCCAAMaanaArchivo_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinCCAAMaanaArchivo_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción CCAA mañana. Archivo.
     * Predicción para la comunidad autónoma que se pasa como parámetro (ccaa) con validez para el día siguiente a la fecha de elaboración que se pasa como parámetro (fecha). Periodicidad de actualización. continuamente.
     * @param {String} ccaa  | Código de CCAA | CCAA | |----------|----------| | and  | Andalucía   | | arn  | Aragón   | | ast  | Astrrias  | | bal  | Ballears, Illes   | | coo  | Canarias   | | can  | Cantabria   | | cle  | Castilla y León   | | clm  | Castilla - La Mancha   | | cat  | Cataluña   | | val  | Comunitat Valenciana   | | ext  | Extremadura   | | gal  | Galicia   | | mad  | Madrid, Comunidad de    | | mur  | Murcia, Región de   | | nav  | Navarra, Comunidad Foral de   | | pva  | País Vasco | | rio  | Rioja, La   
     * @param {String} fecha Día de elaboración (AAAA-MM-DD)
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinCCAAMaanaArchivo_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinCCAAMaanaArchivo_ = function(ccaa, fecha, callback) {
      var postBody = null;

      // verify the required parameter 'ccaa' is set
      if (ccaa === undefined || ccaa === null) {
        throw new Error("Missing the required parameter 'ccaa' when calling prediccinCCAAMaanaArchivo_");
      }

      // verify the required parameter 'fecha' is set
      if (fecha === undefined || fecha === null) {
        throw new Error("Missing the required parameter 'fecha' when calling prediccinCCAAMaanaArchivo_");
      }


      var pathParams = {
        'ccaa': ccaa,
        'fecha': fecha
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/ccaa/manana/{ccaa}/elaboracion/{fecha}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinCCAAMaanaTiempoActual_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinCCAAMaanaTiempoActual_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción CCAA mañana. Tiempo actual.
     * Predicción para la comunidad autónoma que se pasa como parámetro para el día siguiente a la fecha de la petición. En el caso de el producto no se hubiera elaborado todavía en la fecha de petición se retornará el último producto elaborado. Periodicidad de actualización: continuamente.
     * @param {String} ccaa  | Código de CCAA | CCAA | |----------|----------| | and  | Andalucía   | | arn  | Aragón   | | ast  | Astrrias  | | bal  | Ballears, Illes   | | coo  | Canarias   | | can  | Cantabria   | | cle  | Castilla y León   | | clm  | Castilla - La Mancha   | | cat  | Cataluña   | | val  | Comunitat Valenciana   | | ext  | Extremadura   | | gal  | Galicia   | | mad  | Madrid, Comunidad de    | | mur  | Murcia, Región de   | | nav  | Navarra, Comunidad Foral de   | | pva  | País Vasco | | rio  | Rioja, La   
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinCCAAMaanaTiempoActual_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinCCAAMaanaTiempoActual_ = function(ccaa, callback) {
      var postBody = null;

      // verify the required parameter 'ccaa' is set
      if (ccaa === undefined || ccaa === null) {
        throw new Error("Missing the required parameter 'ccaa' when calling prediccinCCAAMaanaTiempoActual_");
      }


      var pathParams = {
        'ccaa': ccaa
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/ccaa/manana/{ccaa}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinCCAAMedioPlazoArchivo_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinCCAAMedioPlazoArchivo_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción CCAA medio plazo. Archivo.
     * Predicción de mediio plazo para la comunidad autónoma que se pasa como parámetro (ccaa) a partir de la fecha de elaboración que se pasa como parámetro (fecha). Periodicidad de actualización: continuamente.
     * @param {String} ccaa  | Código de CCAA | CCAA | |----------|----------| | and  | Andalucía   | | arn  | Aragón   | | ast  | Astrrias  | | bal  | Ballears, Illes   | | coo  | Canarias   | | can  | Cantabria   | | cle  | Castilla y León   | | clm  | Castilla - La Mancha   | | cat  | Cataluña   | | val  | Comunitat Valenciana   | | ext  | Extremadura   | | gal  | Galicia   | | mad  | Madrid, Comunidad de    | | mur  | Murcia, Región de   | | nav  | Navarra, Comunidad Foral de   | | pva  | País Vasco | | rio  | Rioja, La   
     * @param {String} fecha Día de elaboración (AAAA-MM-DD)
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinCCAAMedioPlazoArchivo_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinCCAAMedioPlazoArchivo_ = function(ccaa, fecha, callback) {
      var postBody = null;

      // verify the required parameter 'ccaa' is set
      if (ccaa === undefined || ccaa === null) {
        throw new Error("Missing the required parameter 'ccaa' when calling prediccinCCAAMedioPlazoArchivo_");
      }

      // verify the required parameter 'fecha' is set
      if (fecha === undefined || fecha === null) {
        throw new Error("Missing the required parameter 'fecha' when calling prediccinCCAAMedioPlazoArchivo_");
      }


      var pathParams = {
        'ccaa': ccaa,
        'fecha': fecha
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/ccaa/medioplazo/{ccaa}/elaboracion/{fecha}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinCCAAMedioPlazoTiempoActual_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinCCAAMedioPlazoTiempoActual_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción CCAA medio plazo. Tiempo actual.
     * Predicción para la comunidad autónoma que se pasa como parámetro (ccaa) y con validez para el medio plazo a partir de la fecha de petición. En el caso de que en el fecha de la petición no se hubiera generado aún el producto, se retornará el última elaborado. Periodicidad de actualización: continuamente.
     * @param {String} ccaa  | Código de CCAA | CCAA | |----------|----------| | and  | Andalucía   | | arn  | Aragón   | | ast  | Astrrias  | | bal  | Ballears, Illes   | | coo  | Canarias   | | can  | Cantabria   | | cle  | Castilla y León   | | clm  | Castilla - La Mancha   | | cat  | Cataluña   | | val  | Comunitat Valenciana   | | ext  | Extremadura   | | gal  | Galicia   | | mad  | Madrid, Comunidad de    | | mur  | Murcia, Región de   | | nav  | Navarra, Comunidad Foral de   | | pva  | País Vasco | | rio  | Rioja, La   
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinCCAAMedioPlazoTiempoActual_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinCCAAMedioPlazoTiempoActual_ = function(ccaa, callback) {
      var postBody = null;

      // verify the required parameter 'ccaa' is set
      if (ccaa === undefined || ccaa === null) {
        throw new Error("Missing the required parameter 'ccaa' when calling prediccinCCAAMedioPlazoTiempoActual_");
      }


      var pathParams = {
        'ccaa': ccaa
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/ccaa/medioplazo/{ccaa}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinCCAAPasadoMaanaArchivo_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinCCAAPasadoMaanaArchivo_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción CCAA pasado mañana. Archivo.
     * Predicción para la comunidad autónoma que se pasa como parámetro (ccaa) y validez para pasado mañana a partir de la fecha de elaboración que se pasa como parámetro (fecha). Periodicidad de actualización: continuamente.
     * @param {String} ccaa  | Código de CCAA | CCAA | |----------|----------| | and  | Andalucía   | | arn  | Aragón   | | ast  | Astrrias  | | bal  | Ballears, Illes   | | coo  | Canarias   | | can  | Cantabria   | | cle  | Castilla y León   | | clm  | Castilla - La Mancha   | | cat  | Cataluña   | | val  | Comunitat Valenciana   | | ext  | Extremadura   | | gal  | Galicia   | | mad  | Madrid, Comunidad de    | | mur  | Murcia, Región de   | | nav  | Navarra, Comunidad Foral de   | | pva  | País Vasco | | rio  | Rioja, La   
     * @param {String} fecha Día de elaboración (AAAA-MM-DD)
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinCCAAPasadoMaanaArchivo_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinCCAAPasadoMaanaArchivo_ = function(ccaa, fecha, callback) {
      var postBody = null;

      // verify the required parameter 'ccaa' is set
      if (ccaa === undefined || ccaa === null) {
        throw new Error("Missing the required parameter 'ccaa' when calling prediccinCCAAPasadoMaanaArchivo_");
      }

      // verify the required parameter 'fecha' is set
      if (fecha === undefined || fecha === null) {
        throw new Error("Missing the required parameter 'fecha' when calling prediccinCCAAPasadoMaanaArchivo_");
      }


      var pathParams = {
        'ccaa': ccaa,
        'fecha': fecha
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/ccaa/pasadomanana/{ccaa}/elaboracion/{fecha}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinCCAAPasadoMaanaTiempoActual_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinCCAAPasadoMaanaTiempoActual_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción CCAA pasado mañana. Tiempo actual.
     * Predicción para la comunidad autónoma que se pasa como parámetro (ccaa) y validez para el medio plazo a partir de la fecha de la petición. En el caso de que en la fecha de la petición dicho producto aún no se hubiera generado retornará el último de este tipo que se hubiera generado.  Periodicidad de actualización: continuamente.
     * @param {String} ccaa  | Código de CCAA | CCAA | |----------|----------| | and  | Andalucía   | | arn  | Aragón   | | ast  | Astrrias  | | bal  | Ballears, Illes   | | coo  | Canarias   | | can  | Cantabria   | | cle  | Castilla y León   | | clm  | Castilla - La Mancha   | | cat  | Cataluña   | | val  | Comunitat Valenciana   | | ext  | Extremadura   | | gal  | Galicia   | | mad  | Madrid, Comunidad de    | | mur  | Murcia, Región de   | | nav  | Navarra, Comunidad Foral de   | | pva  | País Vasco | | rio  | Rioja, La   
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinCCAAPasadoMaanaTiempoActual_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinCCAAPasadoMaanaTiempoActual_ = function(ccaa, callback) {
      var postBody = null;

      // verify the required parameter 'ccaa' is set
      if (ccaa === undefined || ccaa === null) {
        throw new Error("Missing the required parameter 'ccaa' when calling prediccinCCAAPasadoMaanaTiempoActual_");
      }


      var pathParams = {
        'ccaa': ccaa
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/ccaa/pasadomanana/{ccaa}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinNacionalHoyArchivo_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalHoyArchivo_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción nacional hoy. Archivo.
     * Predicción nacional para el día correspondiente a la fecha que se pasa como parámetro en en formato texto. Actualización diaria. Hay días en los que este producto no se realiza. En ese caso se devuelve un 404 producto no existente.
     * @param {String} fecha Fecha en formato (AAAA-MM-DD)
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalHoyArchivo_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinNacionalHoyArchivo_ = function(fecha, callback) {
      var postBody = null;

      // verify the required parameter 'fecha' is set
      if (fecha === undefined || fecha === null) {
        throw new Error("Missing the required parameter 'fecha' when calling prediccinNacionalHoyArchivo_");
      }


      var pathParams = {
        'fecha': fecha
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/nacional/hoy/elaboracion/{fecha}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinNacionalHoyTiempoActual_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalHoyTiempoActual_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción nacional hoy. Última elaborada.
     * Predicción nacional para el día actual a la fecha de elaboración en formato texto. Actualización diaria. Hay días en los que este producto no se realiza. En ese caso se devuelve la predicción nacional última que se elaboró.
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalHoyTiempoActual_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinNacionalHoyTiempoActual_ = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/nacional/hoy', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinNacionalMaanaArchivo_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalMaanaArchivo_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción nacional mañana. Archivo.
     * Predicción nacional para el día siguiente a la fecha de elaboración. En este caso la fecha de elaboración es la fecha que se pasa como parámetro. Actualización diaria.
     * @param {String} fecha Día (AAAA-MM-DD)
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalMaanaArchivo_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinNacionalMaanaArchivo_ = function(fecha, callback) {
      var postBody = null;

      // verify the required parameter 'fecha' is set
      if (fecha === undefined || fecha === null) {
        throw new Error("Missing the required parameter 'fecha' when calling prediccinNacionalMaanaArchivo_");
      }


      var pathParams = {
        'fecha': fecha
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/nacional/manana/elaboracion/{fecha}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinNacionalMaanaTiempoActual_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalMaanaTiempoActual_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción nacional mañana. Tiempo actual.
     * Predicción nacional para el día siguiente a la fecha de elaboración. En este caso la fecha de elaboración es el día actual. Actualización diaria. En el caso de que en el día actual  todavía no se haya elaborado se devolverá el último producto de predicción nacional para mañana elaborado.
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalMaanaTiempoActual_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinNacionalMaanaTiempoActual_ = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/nacional/manana', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinNacionalMedioPlazoArchivo_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalMedioPlazoArchivo_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción nacional medio plazo. Archivo.
     * Predicción nacional para el medio plazo siguiente a la fecha de elaboración. En este caso, la fecha de elaboración es la fecha que se pasa como parámetro. Actualización diaria.
     * @param {String} fecha Día (AAAA-MM-DD)
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalMedioPlazoArchivo_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinNacionalMedioPlazoArchivo_ = function(fecha, callback) {
      var postBody = null;

      // verify the required parameter 'fecha' is set
      if (fecha === undefined || fecha === null) {
        throw new Error("Missing the required parameter 'fecha' when calling prediccinNacionalMedioPlazoArchivo_");
      }


      var pathParams = {
        'fecha': fecha
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/nacional/medioplazo/elaboracion/{fecha}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinNacionalMedioPlazoTiempoActual_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalMedioPlazoTiempoActual_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción nacional medio plazo. Tiempo actual.
     * Predicción nacional para medio plazo siguiente a la fecha de elaboración. En este caso la fecha de elaboración es el día actual. Actualización diaria. En el caso de que en el día actual  todavía no se haya elaborado se devolverá el último producto de predicción nacional para medio plazo elaborado.
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalMedioPlazoTiempoActual_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinNacionalMedioPlazoTiempoActual_ = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/nacional/medioplazo', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinNacionalPasadoMaanaArchivo_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalPasadoMaanaArchivo_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción nacional pasado mañana. Archivo.
     * Predicción nacional para pasado mañana siguiente a la fecha de elaboración. En este caso, la fecha de elaboración es la fecha que se pasa como parámetro. Actualización diaria.
     * @param {String} fecha Día (AAAA-MM-DD)
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalPasadoMaanaArchivo_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinNacionalPasadoMaanaArchivo_ = function(fecha, callback) {
      var postBody = null;

      // verify the required parameter 'fecha' is set
      if (fecha === undefined || fecha === null) {
        throw new Error("Missing the required parameter 'fecha' when calling prediccinNacionalPasadoMaanaArchivo_");
      }


      var pathParams = {
        'fecha': fecha
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/nacional/pasadomanana/elaboracion/{fecha}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinNacionalPasadoMaanaTiempoActual_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalPasadoMaanaTiempoActual_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción nacional pasado mañana. Tiempo actual.
     * Predicción nacional para pasado mañana siguiente a la fecha de elaboración. En este caso la fecha de elaboración es el día actual. Actualización diaria. En el caso de que en el día actual  todavía no se haya elaborado se devolverá el último producto de predicción nacional para pasado mañana elaborado.
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalPasadoMaanaTiempoActual_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinNacionalPasadoMaanaTiempoActual_ = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/nacional/pasadomanana', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinNacionalTendenciaArchivo_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalTendenciaArchivo_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción nacional tendencia. Archivo.
     * Predicción nacional para tendencia siguiente a la fecha de elaboración. En este caso, la fecha de elaboración es la fecha que se pasa como parámetro. Actualización diaria.
     * @param {String} fecha Día (AAAA-MM-DD)
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalTendenciaArchivo_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinNacionalTendenciaArchivo_ = function(fecha, callback) {
      var postBody = null;

      // verify the required parameter 'fecha' is set
      if (fecha === undefined || fecha === null) {
        throw new Error("Missing the required parameter 'fecha' when calling prediccinNacionalTendenciaArchivo_");
      }


      var pathParams = {
        'fecha': fecha
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/nacional/tendencia/elaboracion/{fecha}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinNacionalTendenciaTiempoActual_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalTendenciaTiempoActual_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción nacional tendencia. Tiempo actual.
     * Predicción nacional para tendencia siguiente a la fecha de elaboración. En este caso la fecha de elaboración es el día actual. Actualización diaria. En el caso de que en el día actual  todavía no se haya elaborado se devolverá el último producto de predicción nacional para tendencia elaborado.
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinNacionalTendenciaTiempoActual_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinNacionalTendenciaTiempoActual_ = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/nacional/tendencia', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinProvinciaHoyArchivo_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinProvinciaHoyArchivo_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción provincia hoy. Archivo.
     * Predicción del día siguiente a la fecha que se pasa como parámetro para la provincia que se pasa como parámetro. Actualización continua y fija a las 14:00 Hora Oficial Peninsular del día que se pasa como parámetro.
     * @param {String} provincia  | Código Provincia | Provincia | |----------|----------| | 01  | Araba/Álaba   | | 01  | Araba/Álava   | | 02  | Albacete   | | 03  | Alacant/Alicante  | | 04  | Almería   | | 33  | Asturias   | | 05  | Ávila   | | 06  | Badajoz   | | 07  | Illes Ballears   | | 08  | Barcelona   | | 48  | Bizkaia   | | 09  | Burgos   | | 10  | Cáceres   | | 11  | Cádiz   | | 39  | Cantabria   | | 12  | Castelló/Castellón   | | 51  | Ceuta   | | 13  | Ciudad Real   | | 14  | Córdoba   | | 15  | A Coruña   | | 16  | Cuenca   | | 17  | Girona   | | 18  | Granada   | | 19  | Guadalajara   | | 20  | Gipuzkoa   | | 21  | Huelva   | | 22  | Huesca   | | 23  | Jaén   | | 24  | León   | | 25  | Lleida   | | 27  | Lugo   | | 28  | Madrid   | | 29  | Málaga   | | 52  | Melilla   | | 30  | Murcia   | | 31  | Navarra   | | 32  | Oursense   | | 34  | Palencia   | | 35  | Las Palmas   | | 36  | Pontevedra   | | 26  | La Rioja   | | 37  | Salamanca   | | 38  | Santa Cruz de Tenerife   | | 40  | Segovia   | | 41  | Sevilla   | | 42  | Soria   | | 43  | Tarragona   | | 44  | Teruel   | | 45  | Toledo   | | 46  | València/Valencia   | | 47  | Valladolid   | | 49  | Zamora   | | 50  | Zaragoza   | | 
     * @param {String} fecha Día de elaboración (AAAA-MM-DD)
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinProvinciaHoyArchivo_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinProvinciaHoyArchivo_ = function(provincia, fecha, callback) {
      var postBody = null;

      // verify the required parameter 'provincia' is set
      if (provincia === undefined || provincia === null) {
        throw new Error("Missing the required parameter 'provincia' when calling prediccinProvinciaHoyArchivo_");
      }

      // verify the required parameter 'fecha' is set
      if (fecha === undefined || fecha === null) {
        throw new Error("Missing the required parameter 'fecha' when calling prediccinProvinciaHoyArchivo_");
      }


      var pathParams = {
        'provincia': provincia,
        'fecha': fecha
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/provincia/hoy/{provincia}/elaboracion/{fecha}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinProvinciaHoyTiempoActual_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinProvinciaHoyTiempoActual_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción provincia hoy. Tiempo actual.
     * Predicción del día actual para la provincia que se pasa como parámetro. En el caso de que este producto no se haya elaborado todavía en el día actual, se retorna el último elaborado. Actualización continua y fija a las 14:00 Hora Oficial Peninsular.
     * @param {String} provincia  | Código Provincia | Provincia | |----------|----------| | 01  | Araba/Álaba   | | 01  | Araba/Álava   | | 02  | Albacete   | | 03  | Alacant/Alicante  | | 04  | Almería   | | 33  | Asturias   | | 05  | Ávila   | | 06  | Badajoz   | | 07  | Illes Ballears   | | 08  | Barcelona   | | 48  | Bizkaia   | | 09  | Burgos   | | 10  | Cáceres   | | 11  | Cádiz   | | 39  | Cantabria   | | 12  | Castelló/Castellón   | | 51  | Ceuta   | | 13  | Ciudad Real   | | 14  | Córdoba   | | 15  | A Coruña   | | 16  | Cuenca   | | 17  | Girona   | | 18  | Granada   | | 19  | Guadalajara   | | 20  | Gipuzkoa   | | 21  | Huelva   | | 22  | Huesca   | | 23  | Jaén   | | 24  | León   | | 25  | Lleida   | | 27  | Lugo   | | 28  | Madrid   | | 29  | Málaga   | | 52  | Melilla   | | 30  | Murcia   | | 31  | Navarra   | | 32  | Oursense   | | 34  | Palencia   | | 35  | Las Palmas   | | 36  | Pontevedra   | | 26  | La Rioja   | | 37  | Salamanca   | | 38  | Santa Cruz de Tenerife   | | 40  | Segovia   | | 41  | Sevilla   | | 42  | Soria   | | 43  | Tarragona   | | 44  | Teruel   | | 45  | Toledo   | | 46  | València/Valencia   | | 47  | Valladolid   | | 49  | Zamora   | | 50  | Zaragoza   | | 
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinProvinciaHoyTiempoActual_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinProvinciaHoyTiempoActual_ = function(provincia, callback) {
      var postBody = null;

      // verify the required parameter 'provincia' is set
      if (provincia === undefined || provincia === null) {
        throw new Error("Missing the required parameter 'provincia' when calling prediccinProvinciaHoyTiempoActual_");
      }


      var pathParams = {
        'provincia': provincia
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/provincia/hoy/{provincia}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinProvinciaMaanaArchivo_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinProvinciaMaanaArchivo_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción provincia mañana. Archivo.
     * Predicción del día siguiente a la fecha que se pasa como parámetro para la provincia que se pasa como parámetro. Actualización continua y fija a las 14:00 Hora Oficial Peninsular del día que se pasa como parámetro.
     * @param {String} provincia  | Código Provincia | Provincia | |----------|----------| | 01  | Araba/Álaba   | | 01  | Araba/Álava   | | 02  | Albacete   | | 03  | Alacant/Alicante  | | 04  | Almería   | | 33  | Asturias   | | 05  | Ávila   | | 06  | Badajoz   | | 07  | Illes Ballears   | | 08  | Barcelona   | | 48  | Bizkaia   | | 09  | Burgos   | | 10  | Cáceres   | | 11  | Cádiz   | | 39  | Cantabria   | | 12  | Castelló/Castellón   | | 51  | Ceuta   | | 13  | Ciudad Real   | | 14  | Córdoba   | | 15  | A Coruña   | | 16  | Cuenca   | | 17  | Girona   | | 18  | Granada   | | 19  | Guadalajara   | | 20  | Gipuzkoa   | | 21  | Huelva   | | 22  | Huesca   | | 23  | Jaén   | | 24  | León   | | 25  | Lleida   | | 27  | Lugo   | | 28  | Madrid   | | 29  | Málaga   | | 52  | Melilla   | | 30  | Murcia   | | 31  | Navarra   | | 32  | Oursense   | | 34  | Palencia   | | 35  | Las Palmas   | | 36  | Pontevedra   | | 26  | La Rioja   | | 37  | Salamanca   | | 38  | Santa Cruz de Tenerife   | | 40  | Segovia   | | 41  | Sevilla   | | 42  | Soria   | | 43  | Tarragona   | | 44  | Teruel   | | 45  | Toledo   | | 46  | València/Valencia   | | 47  | Valladolid   | | 49  | Zamora   | | 50  | Zaragoza   | | 
     * @param {String} fecha Día de elaboración (AAAA-MM-DD)
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinProvinciaMaanaArchivo_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinProvinciaMaanaArchivo_ = function(provincia, fecha, callback) {
      var postBody = null;

      // verify the required parameter 'provincia' is set
      if (provincia === undefined || provincia === null) {
        throw new Error("Missing the required parameter 'provincia' when calling prediccinProvinciaMaanaArchivo_");
      }

      // verify the required parameter 'fecha' is set
      if (fecha === undefined || fecha === null) {
        throw new Error("Missing the required parameter 'fecha' when calling prediccinProvinciaMaanaArchivo_");
      }


      var pathParams = {
        'provincia': provincia,
        'fecha': fecha
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/provincia/manana/{provincia}/elaboracion/{fecha}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the prediccinProvinciaMaanaTiempoActual_ operation.
     * @callback module:api/PrediccionesNormalizadasTextoApi~prediccinProvinciaMaanaTiempoActual_Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Predicción provincia mañana. Tiempo actual.
     * Predicción del día siguiente para la provincia que se pasa como parámetro. En el caso de que este producto no se haya elaborado todavía en el día actual, se retorna el último elaborado. Actualización continua y fija a las 14:00 Hora Oficial Peninsular.
     * @param {String} provincia  | Código Provincia | Provincia | |----------|----------| | 01  | Araba/Álaba   | | 01  | Araba/Álava   | | 02  | Albacete   | | 03  | Alacant/Alicante  | | 04  | Almería   | | 33  | Asturias   | | 05  | Ávila   | | 06  | Badajoz   | | 07  | Illes Ballears   | | 08  | Barcelona   | | 48  | Bizkaia   | | 09  | Burgos   | | 10  | Cáceres   | | 11  | Cádiz   | | 39  | Cantabria   | | 12  | Castelló/Castellón   | | 51  | Ceuta   | | 13  | Ciudad Real   | | 14  | Córdoba   | | 15  | A Coruña   | | 16  | Cuenca   | | 17  | Girona   | | 18  | Granada   | | 19  | Guadalajara   | | 20  | Gipuzkoa   | | 21  | Huelva   | | 22  | Huesca   | | 23  | Jaén   | | 24  | León   | | 25  | Lleida   | | 27  | Lugo   | | 28  | Madrid   | | 29  | Málaga   | | 52  | Melilla   | | 30  | Murcia   | | 31  | Navarra   | | 32  | Oursense   | | 34  | Palencia   | | 35  | Las Palmas   | | 36  | Pontevedra   | | 26  | La Rioja   | | 37  | Salamanca   | | 38  | Santa Cruz de Tenerife   | | 40  | Segovia   | | 41  | Sevilla   | | 42  | Soria   | | 43  | Tarragona   | | 44  | Teruel   | | 45  | Toledo   | | 46  | València/Valencia   | | 47  | Valladolid   | | 49  | Zamora   | | 50  | Zaragoza   | | 
     * @param {module:api/PrediccionesNormalizadasTextoApi~prediccinProvinciaMaanaTiempoActual_Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200}
     */
    this.prediccinProvinciaMaanaTiempoActual_ = function(provincia, callback) {
      var postBody = null;

      // verify the required parameter 'provincia' is set
      if (provincia === undefined || provincia === null) {
        throw new Error("Missing the required parameter 'provincia' when calling prediccinProvinciaMaanaTiempoActual_");
      }


      var pathParams = {
        'provincia': provincia
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Model200;

      return this.apiClient.callApi(
        '/api/prediccion/provincia/manana/{provincia}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
