/**
 * AEMET OpenData
 * AEMET OpenData es una API REST desarrollado por AEMET que permite la difusión y la reutilización de la información meteorológica y climatológica de la Agencia, en el sentido indicado en la Ley 18/2015, de 9 de julio, por la que se modifica la Ley 37/2007, de 16 de noviembre, sobre reutilización de la información del sector público. (IMPORTANTE: Para poder realizar peticiones, es necesario introducir en API Key haciendo clic en el círculo rojo de recurso REST).
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Model200', 'model/Model401', 'model/Model404', 'model/Model429', 'api/AvisosCapApi', 'api/IndicesIncendiosApi', 'api/InformacionSateliteApi', 'api/MaestroApi', 'api/MapasYGraficosApi', 'api/ObservacionConvencionalApi', 'api/PrediccionMaritimaApi', 'api/PrediccionesEspecificasApi', 'api/PrediccionesNormalizadasTextoApi', 'api/ProductosClimatologicosApi', 'api/RedRadaresApi', 'api/RedRayosApi', 'api/RedesEspecialesApi', 'api/ValoresClimatologicosApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Model200'), require('./model/Model401'), require('./model/Model404'), require('./model/Model429'), require('./api/AvisosCapApi'), require('./api/IndicesIncendiosApi'), require('./api/InformacionSateliteApi'), require('./api/MaestroApi'), require('./api/MapasYGraficosApi'), require('./api/ObservacionConvencionalApi'), require('./api/PrediccionMaritimaApi'), require('./api/PrediccionesEspecificasApi'), require('./api/PrediccionesNormalizadasTextoApi'), require('./api/ProductosClimatologicosApi'), require('./api/RedRadaresApi'), require('./api/RedRayosApi'), require('./api/RedesEspecialesApi'), require('./api/ValoresClimatologicosApi'));
  }
}(function(ApiClient, Model200, Model401, Model404, Model429, AvisosCapApi, IndicesIncendiosApi, InformacionSateliteApi, MaestroApi, MapasYGraficosApi, ObservacionConvencionalApi, PrediccionMaritimaApi, PrediccionesEspecificasApi, PrediccionesNormalizadasTextoApi, ProductosClimatologicosApi, RedRadaresApi, RedRayosApi, RedesEspecialesApi, ValoresClimatologicosApi) {
  'use strict';

  /**
   * AEMET_OpenData_es_una_API_REST_desarrollado_por_AEMET_que_permite_la_difusin_y_la_reutilizacin_de_la_informacin_meteorolgica_y_climatolgica_de_la_Agencia_en_el_sentido_indicado_en_la_Ley_182015_de_9_de_julio_por_la_que_se_modifica_la_Ley_372007_de_16_de_noviembre_sobre_reutilizacin_de_la_informacin_del_sector_pblico___IMPORTANTE_Para_poder_realizar_peticiones_es_necesario_introducir_en_API_Key_haciendo_clic_en_el_crculo_rojo_de_recurso_REST_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var AemetOpenData = require('index'); // See note below*.
   * var xxxSvc = new AemetOpenData.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new AemetOpenData.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new AemetOpenData.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new AemetOpenData.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Model200 model constructor.
     * @property {module:model/Model200}
     */
    Model200: Model200,
    /**
     * The Model401 model constructor.
     * @property {module:model/Model401}
     */
    Model401: Model401,
    /**
     * The Model404 model constructor.
     * @property {module:model/Model404}
     */
    Model404: Model404,
    /**
     * The Model429 model constructor.
     * @property {module:model/Model429}
     */
    Model429: Model429,
    /**
     * The AvisosCapApi service constructor.
     * @property {module:api/AvisosCapApi}
     */
    AvisosCapApi: AvisosCapApi,
    /**
     * The IndicesIncendiosApi service constructor.
     * @property {module:api/IndicesIncendiosApi}
     */
    IndicesIncendiosApi: IndicesIncendiosApi,
    /**
     * The InformacionSateliteApi service constructor.
     * @property {module:api/InformacionSateliteApi}
     */
    InformacionSateliteApi: InformacionSateliteApi,
    /**
     * The MaestroApi service constructor.
     * @property {module:api/MaestroApi}
     */
    MaestroApi: MaestroApi,
    /**
     * The MapasYGraficosApi service constructor.
     * @property {module:api/MapasYGraficosApi}
     */
    MapasYGraficosApi: MapasYGraficosApi,
    /**
     * The ObservacionConvencionalApi service constructor.
     * @property {module:api/ObservacionConvencionalApi}
     */
    ObservacionConvencionalApi: ObservacionConvencionalApi,
    /**
     * The PrediccionMaritimaApi service constructor.
     * @property {module:api/PrediccionMaritimaApi}
     */
    PrediccionMaritimaApi: PrediccionMaritimaApi,
    /**
     * The PrediccionesEspecificasApi service constructor.
     * @property {module:api/PrediccionesEspecificasApi}
     */
    PrediccionesEspecificasApi: PrediccionesEspecificasApi,
    /**
     * The PrediccionesNormalizadasTextoApi service constructor.
     * @property {module:api/PrediccionesNormalizadasTextoApi}
     */
    PrediccionesNormalizadasTextoApi: PrediccionesNormalizadasTextoApi,
    /**
     * The ProductosClimatologicosApi service constructor.
     * @property {module:api/ProductosClimatologicosApi}
     */
    ProductosClimatologicosApi: ProductosClimatologicosApi,
    /**
     * The RedRadaresApi service constructor.
     * @property {module:api/RedRadaresApi}
     */
    RedRadaresApi: RedRadaresApi,
    /**
     * The RedRayosApi service constructor.
     * @property {module:api/RedRayosApi}
     */
    RedRayosApi: RedRayosApi,
    /**
     * The RedesEspecialesApi service constructor.
     * @property {module:api/RedesEspecialesApi}
     */
    RedesEspecialesApi: RedesEspecialesApi,
    /**
     * The ValoresClimatologicosApi service constructor.
     * @property {module:api/ValoresClimatologicosApi}
     */
    ValoresClimatologicosApi: ValoresClimatologicosApi
  };

  return exports;
}));
