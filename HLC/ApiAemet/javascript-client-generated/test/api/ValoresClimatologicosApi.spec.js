/**
 * AEMET OpenData
 * AEMET OpenData es una API REST desarrollado por AEMET que permite la difusión y la reutilización de la información meteorológica y climatológica de la Agencia, en el sentido indicado en la Ley 18/2015, de 9 de julio, por la que se modifica la Ley 37/2007, de 16 de noviembre, sobre reutilización de la información del sector público. (IMPORTANTE: Para poder realizar peticiones, es necesario introducir en API Key haciendo clic en el círculo rojo de recurso REST).
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AemetOpenData);
  }
}(this, function(expect, AemetOpenData) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AemetOpenData.ValoresClimatologicosApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ValoresClimatologicosApi', function() {
    describe('climatologasDiarias1', function() {
      it('should call climatologasDiarias1 successfully', function(done) {
        //uncomment below and update the code to test climatologasDiarias1
        //instance.climatologasDiarias1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('climatologasDiarias_', function() {
      it('should call climatologasDiarias_ successfully', function(done) {
        //uncomment below and update the code to test climatologasDiarias_
        //instance.climatologasDiarias_(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('climatologasMensualesAnuales_', function() {
      it('should call climatologasMensualesAnuales_ successfully', function(done) {
        //uncomment below and update the code to test climatologasMensualesAnuales_
        //instance.climatologasMensualesAnuales_(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('climatologasNormales19812010_', function() {
      it('should call climatologasNormales19812010_ successfully', function(done) {
        //uncomment below and update the code to test climatologasNormales19812010_
        //instance.climatologasNormales19812010_(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('estacionesPorIndicativo_', function() {
      it('should call estacionesPorIndicativo_ successfully', function(done) {
        //uncomment below and update the code to test estacionesPorIndicativo_
        //instance.estacionesPorIndicativo_(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('inventarioDeEstacionesValoresClimatolgicos_', function() {
      it('should call inventarioDeEstacionesValoresClimatolgicos_ successfully', function(done) {
        //uncomment below and update the code to test inventarioDeEstacionesValoresClimatolgicos_
        //instance.inventarioDeEstacionesValoresClimatolgicos_(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('valoresExtremos_', function() {
      it('should call valoresExtremos_ successfully', function(done) {
        //uncomment below and update the code to test valoresExtremos_
        //instance.valoresExtremos_(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
